import { FC, useEffect } from 'react';
import { useDispatch } from 'react-redux';
import { AppDispatch } from '../../services/store';
import { useSelector } from '../../services/store';

// –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö thunk —Ñ—É–Ω–∫—Ü–∏–π
import { fetchIngredients } from '../../utils/burger-slice';
import { getFeeds } from '../../utils/feed-slice';
import { getUserOrders } from '../../utils/orders-slice';
import { getUser } from '../../utils/user-slice';

// –ò–º–ø–æ—Ä—Ç —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
import {
  selectIngredients,
  selectIngredientsStatus,
  selectFeedOrders,
  selectFeedStatus,
  selectUserOrders,
  selectOrdersStatus,
  selectIsAuthenticated,
  selectUser
} from '../../utils/selectors';

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Redux store
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤—Å–µ—Ö —Å–ª–∞–π—Å–æ–≤
 */
export const ReduxDemo: FC = () => {
  const dispatch = useDispatch<AppDispatch>();

  // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
  const ingredients = useSelector(selectIngredients);
  const ingredientsStatus = useSelector(selectIngredientsStatus);

  // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ª–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤
  const feedOrders = useSelector(selectFeedOrders);
  const feedStatus = useSelector(selectFeedStatus);

  // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userOrders = useSelector(selectUserOrders);
  const ordersStatus = useSelector(selectOrdersStatus);

  // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const isAuthenticated = useSelector(selectIsAuthenticated);
  const user = useSelector(selectUser);

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
    if (ingredientsStatus === 'idle') {
      dispatch(fetchIngredients());
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–µ–Ω—Ç—É –∑–∞–∫–∞–∑–æ–≤
    dispatch(getFeeds());

    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    dispatch(getUser());

    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ –∑–∞–∫–∞–∑—ã
    if (isAuthenticated) {
      dispatch(getUserOrders());
    }
  }, [dispatch, ingredientsStatus, isAuthenticated]);

  return (
    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>
      <h1>üöÄ Redux Store Demo - Stellar Burgers</h1>

      <div
        style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px' }}
      >
        {/* –°–µ–∫—Ü–∏—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ */}
        <div
          style={{
            border: '1px solid #ccc',
            padding: '15px',
            borderRadius: '8px'
          }}
        >
          <h2>üçî –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</h2>
          <p>
            <strong>–°—Ç–∞—Ç—É—Å:</strong> {ingredientsStatus}
          </p>
          <p>
            <strong>–ë—É–ª–∫–∏:</strong> {ingredients.buns.length}
          </p>
          <p>
            <strong>–ù–∞—á–∏–Ω–∫–∏:</strong> {ingredients.mains.length}
          </p>
          <p>
            <strong>–°–æ—É—Å—ã:</strong> {ingredients.sauces.length}
          </p>

          {ingredientsStatus === 'loading' && (
            <p>‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã...</p>
          )}
          {ingredientsStatus === 'succeeded' && (
            <div>
              <p>‚úÖ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!</p>
              <details>
                <summary>–ü–µ—Ä–≤—ã–µ 3 –±—É–ª–∫–∏:</summary>
                <ul>
                  {ingredients.buns.slice(0, 3).map((bun) => (
                    <li key={bun._id}>
                      {bun.name} - {bun.price}‚ÇΩ
                    </li>
                  ))}
                </ul>
              </details>
            </div>
          )}
          {ingredientsStatus === 'failed' && (
            <p>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤</p>
          )}
        </div>

        {/* –°–µ–∫—Ü–∏—è –ª–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤ */}
        <div
          style={{
            border: '1px solid #ccc',
            padding: '15px',
            borderRadius: '8px'
          }}
        >
          <h2>üìã –õ–µ–Ω—Ç–∞ –∑–∞–∫–∞–∑–æ–≤</h2>
          <p>
            <strong>–°—Ç–∞—Ç—É—Å:</strong> {feedStatus}
          </p>
          <p>
            <strong>–ó–∞–∫–∞–∑–æ–≤ –≤ –ª–µ–Ω—Ç–µ:</strong> {feedOrders.length}
          </p>

          {feedStatus === 'loading' && <p>‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–µ–Ω—Ç—É –∑–∞–∫–∞–∑–æ–≤...</p>}
          {feedStatus === 'succeeded' && (
            <div>
              <p>‚úÖ –õ–µ–Ω—Ç–∞ –∑–∞–∫–∞–∑–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!</p>
              <details>
                <summary>–ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∑–∞–∫–∞–∑–∞:</summary>
                <ul>
                  {feedOrders.slice(0, 3).map((order) => (
                    <li key={order._id}>
                      #{order.number} - {order.name}
                    </li>
                  ))}
                </ul>
              </details>
            </div>
          )}
          {feedStatus === 'failed' && <p>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–µ–Ω—Ç—ã</p>}
        </div>

        {/* –°–µ–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        <div
          style={{
            border: '1px solid #ccc',
            padding: '15px',
            borderRadius: '8px'
          }}
        >
          <h2>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</h2>
          <p>
            <strong>–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:</strong> {isAuthenticated ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}
          </p>
          {isAuthenticated ? (
            <div>
              <p>
                <strong>Email:</strong> {user.email}
              </p>
              <p>
                <strong>–ò–º—è:</strong> {user.name}
              </p>
            </div>
          ) : (
            <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</p>
          )}
        </div>

        {/* –°–µ–∫—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        <div
          style={{
            border: '1px solid #ccc',
            padding: '15px',
            borderRadius: '8px'
          }}
        >
          <h2>üõçÔ∏è –ó–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
          <p>
            <strong>–°—Ç–∞—Ç—É—Å:</strong> {ordersStatus}
          </p>
          <p>
            <strong>–ó–∞–∫–∞–∑–æ–≤:</strong> {userOrders.length}
          </p>

          {!isAuthenticated && <p>üîí –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</p>}
          {isAuthenticated && ordersStatus === 'loading' && (
            <p>‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–∫–∞–∑—ã...</p>
          )}
          {isAuthenticated && ordersStatus === 'succeeded' && (
            <div>
              <p>‚úÖ –ó–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã!</p>
              {userOrders.length > 0 ? (
                <details>
                  <summary>–ó–∞–∫–∞–∑—ã:</summary>
                  <ul>
                    {userOrders.slice(0, 3).map((order) => (
                      <li key={order._id}>
                        #{order.number} - {order.name}
                      </li>
                    ))}
                  </ul>
                </details>
              ) : (
                <p>–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>
              )}
            </div>
          )}
          {isAuthenticated && ordersStatus === 'failed' && (
            <p>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤</p>
          )}
        </div>
      </div>

      <div
        style={{
          marginTop: '20px',
          padding: '15px',
          backgroundColor: '#f0f8ff',
          borderRadius: '8px'
        }}
      >
        <h3>üéØ –°—Ç–∞—Ç—É—Å Redux Store</h3>
        <p>
          ‚úÖ <strong>RootReducer:</strong> –ù–∞—Å—Ç—Ä–æ–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç
        </p>
        <p>
          ‚úÖ <strong>Thunk —Ñ—É–Ω–∫—Ü–∏–∏:</strong> –°–æ–∑–¥–∞–Ω—ã –¥–ª—è –≤—Å–µ—Ö API –º–µ—Ç–æ–¥–æ–≤
        </p>
        <p>
          ‚úÖ <strong>–°–µ–ª–µ–∫—Ç–æ—Ä—ã:</strong> –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö —Å–ª–∞–π—Å–æ–≤
        </p>
        <p>
          ‚úÖ <strong>Loading states:</strong> –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –≤–æ –≤—Å–µ—Ö —Å–ª–∞–π—Å–∞—Ö
        </p>
        <p>
          ‚úÖ <strong>Error handling:</strong> –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        </p>

        <div style={{ marginTop: '10px', fontSize: '14px', color: '#666' }}>
          <p>
            <strong>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:</strong>
          </p>
          <ul>
            <li>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –∏–∑ API</li>
            <li>–ü–æ–ª—É—á–µ–Ω–∏–µ –ª–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤</li>
            <li>–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</li>
            <li>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</li>
            <li>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤</li>
            <li>–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞</li>
          </ul>
        </div>
      </div>
    </div>
  );
};
